name: GitHub Admin Tool

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - create-team
          - delete-team
          - add-repo
          - remove-repo
          - add-user
          - remove-user
          - create-repo
          - user-access
          - list-orgs
          - list-teams
          - list-repos
          - list-users
          - list-users-access
          - generate-user-report # ✨ New action for Excel report

      org:
        description: 'GitHub Organization (required for most actions)'
        required: true
        type: string

      team:
        description: 'Team name (if applicable)'
        required: false
        type: string

      repo:
        description: 'Repository name (if applicable)'
        required: false
        type: string

      user:
        description: 'GitHub username OR email address (e.g., "octocat" or "user@example.com")'
        required: false
        type: string

      permission:
        description: 'Permission level (if applicable)'
        required: false
        type: choice
        options:
          - nil
          - pull
          - triage
          - push
          - maintain
          - admin

      repo_name:
        description: 'New repo name (for create-repo)'
        required: false
        type: string

      repo_private:
        description: 'Should repo be private? (for create-repo)'
        required: false
        type: boolean
        default: false

jobs:
  github-admin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install openpyxl # ✨ Add openpyxl to ensure it's installed

      - name: Run GitHub Admin Script
        id: run_script
        env:
          TOKEN: ${{ secrets.TOKEN }} # Or ${{ secrets.GITHUB_ADMIN_TOKEN }} if you renamed it
          ACTION: ${{ github.event.inputs.action }}
          ORG: ${{ github.event.inputs.org }}
          TEAM: ${{ github.event.inputs.team }}
          USER: ${{ github.event.inputs.user }}
          REPO: ${{ github.event.inputs.repo }}
          PERMISSION: ${{ github.event.inputs.permission }}
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          REPO_PRIVATE: ${{ github.event.inputs.repo_private }}
        run: |
          # Start building the arguments for the Python script
          # ACTION and ORG are typically always required, so start with them
          CMD_ARGS="--action $ACTION --org $ORG"

          # Conditionally add other arguments if their environment variables are not empty
          if [[ -n "$TEAM" ]]; then
            CMD_ARGS="$CMD_ARGS --team \"$TEAM\"" # Keep quotes for team name (might contain spaces)
          fi

          if [[ -n "$REPO" ]]; then
            CMD_ARGS="$CMD_ARGS --repo \"$REPO\"" # Keep quotes for repo name (might contain spaces)
          fi

          if [[ -n "$USER" ]]; then
            CMD_ARGS="$CMD_ARGS --user \"$USER\"" # Keep quotes for username (though less common to have spaces, safer)
          fi

          if [[ "$PERMISSION" != "nil" && -n "$PERMISSION" ]]; then
            CMD_ARGS="$CMD_ARGS --permission \"$PERMISSION\"" # Keep quotes for permission (single word, but consistent)
          fi

          if [[ -n "$REPO_NAME" ]]; then
            CMD_ARGS="$CMD_ARGS --repo-name \"$REPO_NAME\"" # Keep quotes for repo name
